// LoginForm.js
import React, { useState, useEffect } from 'react';
import './LoginForm.css'; // Import the CSS file

const LoginForm = ({ onLogin }) => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [collegeName, setCollegeName] = useState('');
  const [validEmail, setValidEmail] = useState(false);
  const [validPassword, setValidPassword] = useState(false);
  const [validCollegeName, setValidCollegeName] = useState(false);

  useEffect(() => {
    const isValidEmail = email.includes('@');
    setValidEmail(isValidEmail);

    const isValidPassword = password.length >= 6;
    setValidPassword(isValidPassword);

    const isValidCollegeName = collegeName.trim() !== ''; // Check if it's not empty after trimming
    setValidCollegeName(isValidCollegeName);
  }, [email, password, collegeName]);

  const handleLogin = () => {
    if (validEmail && validPassword && validCollegeName) {
      onLogin(); // Notify the parent component about the successful login
    }
  };

  return (
    <div className="login-container">
      <form>
        <label>Email:
          <input type="text" value={email} onChange={(e) => setEmail(e.target.value)} />
        </label>
        <br />
        <label>Password:
          <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} />
        </label>
        <br />
        <label>College Name:
          <input type="text" value={collegeName} onChange={(e) => setCollegeName(e.target.value)} />
        </label>
        <br />
        <button type="button" onClick={handleLogin} disabled={!validEmail || !validPassword || !validCollegeName}>
          Login
        </button>
      </form>
    </div>
  );
};

export default LoginForm;
